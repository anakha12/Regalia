<%- include("../../views/partials/admin/header") %>
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<style>
    .error-message {
        color: red;
    }

    .thumbnails-container {
        display: flex;
        overflow-x: auto;
    }

    .thumbnail {
        margin-right: 10px;
    }
</style>
<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Add New Product</h2>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/addProducts" enctype="multipart/form-data" onsubmit="return validateForm()">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" placeholder="Type here" name="productName" class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="4"></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular price</label>
                                    <input placeholder="$" name="regularPrice" type="text" class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale price</label>
                                    <input placeholder="$" name="salePrice" type="text" class="form-control border">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Quantity</label>
                                    <input placeholder="" name="quantity" type="text" class="form-control border">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <!-- <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Color</label>
                                    <input name="color" type="text" class="form-control border">
                                    <div id="color-error" class="error-message"></div>
                                </div>
                            </div>
                        </div> -->
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" style="width: 150px;" name="category" required>
                                            <option value="" disabled selected>Select a category</option>
                                            <% for (let i = 0; i < cat.length; i++) { %>
                                                <option value="<%= cat[i].name %>">
                                                    <%= cat[i].name %>
                                                </option>
                                            <% } %>
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="card mb-2">
                            <div class="card-header">
                                <h4>Choose images</h4>
                            </div>
                            <div class="border row">
                                <div id="addedImagesContainer" class="thumbnails-container"></div>
                            </div>
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <img src="" alt="" id="imgView1">
                                    <input class="form-control" type="file" name="images" id="input1"
                                           accept="image/png, image/jpeg, image/jpg"
                                           onchange="viewImage1(event), viewImage(event, 1)">
                                    <div id="images-error" class="error-message"></div>
                                </div>
                                <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                    <img src="" id="croppedImg1" alt="">
                                    <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                </div>
                            </div>
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <img src="" alt="" id="imgView2">
                                    <input class="form-control" type="file" name="images" id="input2"
                                           accept="image/png, image/jpeg, image/jpg"
                                           onchange="viewImage2(event), viewImage(event, 2)">
                                </div>
                                <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                    <img src="" id="croppedImg2" alt="">
                                    <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                </div>
                            </div>
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <img src="" alt="" id="imgView3">
                                    <input class="form-control" type="file" name="images" id="input3"
                                           accept="image/png, image/jpeg, image/jpg"
                                           onchange="viewImage3(event), viewImage(event, 3)">
                                </div>
                                <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                    <img src="" id="croppedImg3" alt="">
                                    <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                </div>
                            </div>
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <img src="" alt="" id="imgView4">
                                    <input class="form-control" type="file" name="images" id="input4"
                                           accept="image/png, image/jpeg, image/jpg"
                                           onchange="viewImage4(event), viewImage(event, 4)">
                                </div>
                                <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                    <img src="" id="croppedImg4" alt="">
                                    <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                </div>
                            </div>
                        </div>
                        <div>
                            <button class="btn btn-md rounded font-sm hover-up" type="submit">Publish</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

<script>
    function validateAndSubmit() {
        if (validateForm()) {
            document.forms[0].submit();
        }
    }

    function viewImage1(event) {
        document.getElementById("imgView1").src = URL.createObjectURL(event.target.files[0]);
    }

    function viewImage2(event) {
        document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0]);
    }

    function viewImage3(event) {
        document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0]);
    }

    function viewImage4(event) {
        document.getElementById("imgView4").src = URL.createObjectURL(event.target.files[0]);
    }

    function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();
    reader.onload = function () {
        let dataURL = reader.result;
        let image = document.getElementById("imgView" + index);
        image.src = dataURL;

        // Initialize cropper
        let cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1,
            zoomable: true,
        });

        let croppedcontainer = document.querySelector("#croppedImg" + index).parentNode;
        croppedcontainer.style.display = 'block';

        let saveButton = document.querySelector("#saveButton" + index);
        saveButton.addEventListener('click', function () {
            let canvas = cropper.getCroppedCanvas();
            let croppedImage = document.getElementById("croppedImg" + index);
            croppedImage.src = canvas.toDataURL();

            // Convert the cropped canvas to Blob and replace the original file input
            canvas.toBlob(function (blob) {
                let fileInput = document.getElementById("input" + index);
                let file = new File([blob], "croppedImage.jpg", { type: "image/jpeg" });

                // Create a new DataTransfer object and add the cropped file
                let dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                fileInput.files = dataTransfer.files;
            }, 'image/jpeg');
        });
    };
    reader.readAsDataURL(input.files[0]);
}


    function validateForm() {
        let isValid = true;

        // Clear previous error messages
        const errorElements = document.querySelectorAll('.error-message');
        errorElements.forEach(el => el.innerHTML = '');

        // Product Name validation
        const productName = document.getElementById('product_name').value;
        if (productName.trim() === '') {
            displayErrorMessage('productName-error', 'Product name is required.');
            isValid = false;
        } else if (!/^[a-zA-Z0-9\s.,'!-]+$/.test(productName)) {
            displayErrorMessage('productName-error', 'Product name contains invalid characters.');
            isValid = false;
        }

        // Description validation
        const description = document.getElementById('descriptionid').value;
        if (description.trim() === '') {
            displayErrorMessage('description-error', 'Description is required.');
            isValid = false;
        } else if (!/^[a-zA-Z0-9\s.,'!-]+$/.test(description.trim())) {
            displayErrorMessage('description-error', 'Product description contains invalid characters.');
            isValid = false;
        }

        // Quantity validation
        const quantity = document.getElementsByName('quantity')[0].value;
        if (isNaN(quantity) || parseInt(quantity) <= 0 || quantity === '') {
            displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
            isValid = false;
        }

        // Regular Price validation
        const price = document.getElementsByName('regularPrice')[0].value;
        if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) <= 0) {
            displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
            isValid = false;
        }

        // Sale Price validation
        const saleprice = document.getElementsByName('salePrice')[0].value;
        if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) <= 0) {
            displayErrorMessage('salePrice-error', 'Please enter a valid non-negative sale price.');
            isValid = false;
        } else if (parseFloat(price) <= parseFloat(saleprice)) {
            displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
            isValid = false;
        }

       
        const category = document.getElementsByName('category')[0].value;
        if (category.trim() === '') {
            displayErrorMessage('category-error', 'Please select a category.');
            isValid = false;
        }

        // Image validation
        const images = document.getElementById('input1').files;
        if (images.length === 0) {
            displayErrorMessage("images-error", 'Please select at least one image.');
            isValid = false;
        }

        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        const errorElement = document.getElementById(elementId);
        errorElement.innerHTML = message;
    }
</script>
<%- include("../../views/partials/admin/footer") %>
