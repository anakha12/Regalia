<%- include("../../views/partials/user/header") %>

<!-- SweetAlert2 CDN for Sweet Alerts -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Check Out</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Home</a>
                        <a href="/shop">Shop</a>
                        <span>Check Out</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->

<!-- Checkout Section Begin -->
<section class="checkout spad">
    <div class="container">
        <div class="row">
            <!-- Left Column: Product Details and Address Form -->
            <div class="col-lg-8 col-md-12" >
                <h6 class="checkout__title">Your Order</h6>
                <!-- Product Details Table -->
                <div class="checkout__order__products">
                    <table>
                        <thead>
                            <tr>
                                <th>Product Name</th>
                                <th>Product Image</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (cartItems.length === 0) { %>
                                <tr>
                                    <td colspan="5" class="text-center">Your cart is empty.</td>
                                </tr>
                            <% } else { %>
                                <% cartItems.forEach(item => { %>
                                    <tr>
                                        <td><%= item.productId.productName %></td>
                                        <td><img src="/uploads/product-images/<%= item.productId.productImage && item.productId.productImage.length > 0 ? item.productId.productImage[0] : 'default-image.jpg' %>" alt="<%= item.productId.productName %>" style="width: 100px; height: auto;"></td>
                                        <td>$<%= item.productId.salePrice %></td>
                                        <td><%= item.quantity %></td>
                                        <td>$<%= item.totalPrice.toFixed(2) %></td>
                                    </tr>
                                <% }); %>
                            <% } %>
                        </tbody>
                    </table>
                </div>

                <h6 class="checkout__title">Billing Details</h6>
                <% if (userAddresses && userAddresses.length > 0) { %>
                    <p>Your Addresses:</p>
                    <form action="/checkout/select-address" method="POST" style="display: flex; flex-wrap: wrap; gap: 20px; margin-top: 10px;">
                        <% userAddresses.forEach((address, index) => { %>
                            <div style="border: 1px solid #ccc; padding: 15px; border-radius: 5px; width: 250px; position: relative; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); display: flex; flex-direction: column;">
                                <input 
                                    type="radio" 
                                    name="selectedAddress" 
                                    value="<%= address._id %>" 
                                    id="address-<%= index %>" 
                                    <% if (index === 0) { %> checked <% } %>
                                    style="position: absolute; top: 10px; left: 10px; width: 16px; height: 16px;">
                                
                                <label for="address-<%= index %>" style="margin-left: 30px;">
                                    <strong><%= address.addressType %> Address:</strong><br>
                                    Name: <%= address.name %><br>
                                    City: <%= address.city %><br>
                                    Landmark: <%= address.landMark %><br>
                                    State: <%= address.state %><br>
                                    Pincode: <%= address.pincode %><br>
                                    Phone: <%= address.phone %><br>
                                    <% if (address.altPhone) { %>
                                        Alt Phone: <%= address.altPhone %><br>
                                    <% } %>
                                </label>
                            </div>
                        <% }); %>
                    </form>
                    <% if (userAddresses.length < 3) { %>
                        <div style="margin-top: 20px;">
                            <a href="/addAddressCart">
                                <button class="btn btn-primary w-70">
                                    Add Another Address
                                </button>
                            </a>
                        </div>
                    <% } %>

                <% } else { %>
                    <p>No saved address. Please add an address below.</p>
                    <div>
                        <a href="/addAddressCart">
                          <button class="btn btn-primary w-70">
                            Add address
                          </button>
                        </a>
                      </div>
                <% } %>

            </div>

            <!-- Right Column: Cart Summary and Payment -->
            <!-- Right Column: Cart Summary and Payment -->
<div class="col-lg-4 col-md-12" style="position: sticky; top: 0; height: 100vh;">
    <div class="checkout__order">
        <h4 class="order__title">Your Order Summary</h4>
        <div class="checkout__order__products">Product <span>Total</span></div>
        <ul class="checkout__total__products">
            <% cartItems.forEach(item => { %>
                <li><%= item.productId.productName %> <span>$<%= item.totalPrice.toFixed(2) %></span></li>
            <% }); %>
        </ul>
        <ul class="checkout__total__all">
            <li>Subtotal <span>$<%= subtotal.toFixed(2) %></span></li>
            <li>Total <span>$<%= cartTotal.toFixed(2) %></span></li>
        </ul>

        <!-- Coupon Discount -->
        <div class="cart__discount" style="margin: 20px 0;">
            <h6>Discount Codes</h6>
            <form action="#">
                <input type="text" placeholder="Coupon code" style="width: 70%; margin-right: 10px;">
                <button type="submit" style="padding: 5px 10px;">Apply</button>
            </form>
        </div>

        <div class="checkout__input__checkbox">
            <label for="payment">
                Cash on delivery
                <input type="checkbox" id="payment">
                <span class="checkmark"></span>
            </label>
        </div>
        <div class="checkout__input__checkbox">
            <label for="paypal">
                Razorpay
                <input type="checkbox" id="paypal">
                <span class="checkmark"></span>
            </label>
        </div>
        <div class="checkout__input__checkbox">
            <label for="wallet">
                Wallet
                <input type="checkbox" id="wallet">
                <span class="checkmark"></span>
            </label>
        </div>
        
        <button id="proceedToPay" class="site-btn">Place Order</button>
    </div>
</div>



        </div>
    </div>
</section>
<!-- Checkout Section End -->
<script>
  document.getElementById('proceedToPay').addEventListener('click', function(event) {
    event.preventDefault();

    const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked').value;
    const paymentMethod = document.querySelector('input[id="payment"]').checked ? 'Cash on Delivery' : 
                          document.querySelector('input[id="wallet"]').checked ? 'Wallet' : 
                          document.querySelector('input[id="paypal"]').checked ? 'Razorpay' : null;

    if (!selectedAddress || !paymentMethod) {
        Swal.fire({
            title: 'Error',
            text: 'Please select an address and a payment method to proceed.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
        return;
    }

    // If payment method is Razorpay
    if (paymentMethod === 'Razorpay') {
        fetch('/createOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                selectedAddressId: selectedAddress,
                amount: 50000
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const options = {
                    key: data.key_id,
                    amount: data.amount,
                    currency: "INR",
                    name: "Your Store Name",
                    description: "Purchase Description",
                    order_id: data.order_id, 
                    handler: function(response) {
                        // After successful payment verification
                        fetch('/verifyPayment', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(response)
                        })
                        .then(res => res.json())
                        .then(verification => {
                            if (verification.success) {
                                // After verification success, add order to database
                                fetch('/addToOrder', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({
                                        selectedAddressId: selectedAddress,
                                        paymentMethod: paymentMethod,
                                        couponApplied: false 
                                    })
                                })
                                .then(orderResponse => orderResponse.json())
                                .then(orderData => {
                                    if (orderData.success) {
                                        Swal.fire({
                                            title: 'Order Placed Successfully!',
                                            text: 'Thank you for your purchase. Your order has been placed.',
                                            icon: 'success',
                                            confirmButtonText: 'Go to Orders'
                                        }).then(() => {
                                            window.location.href = "/order";
                                        });
                                    } else {
                                        Swal.fire({
                                            title: 'Order Placement Failed',
                                            text: orderData.message || 'There was an issue placing your order. Please try again.',
                                            icon: 'error',
                                            confirmButtonText: 'OK'
                                        });
                                    }
                                });
                            } else {
                                Swal.fire({
                                    title: 'Payment Verification Failed',
                                    text: verification.message || 'Please contact support.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        });
                    },
                    prefill: {
                        name: "Customer Name",
                        email: "customer@example.com",
                        contact: "9999999999"
                    },
                    theme: {
                        color: "#3399cc"
                    }
                };

                const rzp = new Razorpay(options);
                rzp.open();
            } else {
                Swal.fire({
                    title: 'Error',
                    text: data.message || 'Failed to initiate Razorpay order.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error',
                text: 'Unable to create Razorpay order. Please try again later.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        });
    } else {
        // Other payment methods
        fetch('/addToOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                selectedAddressId: selectedAddress,
                paymentMethod: paymentMethod,
                couponApplied: false
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    title: 'Order Placed Successfully!',
                    text: 'Thank you for your purchase. Your order has been placed.',
                    icon: 'success',
                    confirmButtonText: 'Go to Orders'
                }).then(() => {
                    window.location.href = "/order";
                });
            } else {
                Swal.fire({
                    title: 'Order Failed',
                    text: data.message || 'There was an issue placing your order. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Order Failed',
                text: 'An unexpected error occurred. Please try again later.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        });
    }
});


</script>


<%- include("../../views/partials/user/footer") %>
