<%- include("../../views/partials/user/header") %>

<!-- SweetAlert2 CDN for Sweet Alerts -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Check Out</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Home</a>
                        <a href="/shop">Shop</a>
                        <span>Check Out</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->

<!-- Checkout Section Begin -->
<section class="checkout spad">
    <div class="container">
        <div class="row">
            <!-- Left Column: Product Details and Address Form -->
            <div class="col-lg-8 col-md-12" >
                <h6 class="checkout__title">Your Order</h6>
                <!-- Product Details Table -->
                <div class="checkout__order__products">
                    <table>
                        <thead>
                            <tr>
                                <th>Product Name</th>
                                <th>Product Image</th>
                                <th>Price</th>
                                <th>Offer</th> 
                                <th>Quantity</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        
                        <tbody>
                            <% if (cartItems.length === 0) { %>
                                <tr>
                                    <td colspan="6" class="text-center">Your cart is empty.</td>
                                </tr>
                            <% } else { %>
                                <% cartItems.forEach(item => { %>
                                    <tr>
                                        <td><%= item.productId.productName %></td>
                                        <td><img src="/uploads/product-images/<%= item.productId.productImage && item.productId.productImage.length > 0 ? item.productId.productImage[0] : 'default-image.jpg' %>" alt="<%= item.productId.productName %>" style="width: 100px; height: auto;"></td>
                                        <td>$<%= item.productId.regularPrice %></td>
                                        
                                        <td>
                                            <%const offerAmount = item.productId.regularPrice - item.totalPrice%>
                                            <% if (offerAmount > 0) { %>
                                                $<%= offerAmount.toFixed(2) %>
                                            <% } else { %>
                                                $0.00
                                            <% } %>
                                        </td>
                                        
                                        <td><%= item.quantity %></td>
                                        <td>$<%= item.totalPrice.toFixed(2) %></td>
                                    </tr>
                                <% }); %>
                            <% } %>
                        </tbody>
                        
                    </table>
                </div>
                <input type="hidden" id="cartTotal" value="<%= cartTotal %>">
                <h6 class="checkout__title">Billing Details</h6>
                <% if (userAddresses && userAddresses.length > 0) { %>
                    <p>Your Addresses:</p>
                    <form action="/checkout/select-address" method="POST" style="display: flex; flex-wrap: wrap; gap: 20px; margin-top: 10px;">
                        <% userAddresses.forEach((address, index) => { %>
                            <div style="border: 1px solid #ccc; padding: 15px; border-radius: 5px; width: 250px; position: relative; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); display: flex; flex-direction: column;">
                                <input 
                                    type="radio" 
                                    name="selectedAddress" 
                                    value="<%= address._id %>" 
                                    id="address-<%= index %>" 
                                    <% if (index === 0) { %> checked <% } %>
                                    style="position: absolute; top: 10px; left: 10px; width: 16px; height: 16px;">
                                
                                <label for="address-<%= index %>" style="margin-left: 30px;">
                                    <strong><%= address.addressType %> Address:</strong><br>
                                    Name: <%= address.name %><br>
                                    City: <%= address.city %><br>
                                    Landmark: <%= address.landMark %><br>
                                    State: <%= address.state %><br>
                                    Pincode: <%= address.pincode %><br>
                                    Phone: <%= address.phone %><br>
                                    <% if (address.altPhone) { %>
                                        Alt Phone: <%= address.altPhone %><br>
                                    <% } %>
                                </label>
                            </div>
                        <% }); %>
                    </form>
                    <% if (userAddresses.length < 3) { %>
                        <div style="margin-top: 20px;">
                            <a href="/addAddressCart">
                                <button class="btn btn-primary w-70">
                                    Add Another Address
                                </button>
                            </a>
                        </div>
                    <% } %>

                <% } else { %>
                    <p>No saved address. Please add an address below.</p>
                    <div>
                        <a href="/addAddressCart">
                          <button class="btn btn-primary w-70">
                            Add address
                          </button>
                        </a>
                      </div>
                <% } %>

            </div>

            <!-- Right Column: Cart Summary and Payment -->
<div class="col-lg-4 col-md-12" style="position: sticky; top: 0; height: 100vh;">
    <div class="checkout__order">
        <h4 class="order__title">Your Order Summary</h4>
        <div class="checkout__order__products">Product <span>Total</span></div>
        <ul class="checkout__total__products">
            <% cartItems.forEach(item => { %>
                <li><%= item.productId.productName %> <span>$<%= item.totalPrice.toFixed(2) %></span></li>
            <% }); %>
        </ul>
        <ul class="checkout__total__all">
            <li>Subtotal <span>$<%= subtotal.toFixed(2) %></span></li>
            <li>Offer <span>$<%= offer.toFixed(2) %></span></li>
            <% if (coupons) { %>
                <li class="coupon-discount">
                    Coupon Discount (<%= coupons.couponCode %>)
                    <span>$<%= coupons.discount.toFixed(2) %></span>
                </li>
            <% } else { %>
                <li class="coupon-discount">Coupon Discount <span>$0</span></li>
            <% } %>
            <li>Total <span>$<%= cartTotal.toFixed(2) %></span></li>
        </ul>
        

       <!-- Coupon Discount -->
<div class="cart__discount" style="margin: 20px 0; display: flex; align-items: center;">

    <input type="text" id="couponCode" placeholder="Coupon code" style="width: 60%; padding: 8px; border: 1px solid #ddd; margin-right: 10px;">
    <button type="button" id="selectCoupon" style="padding: 10px 20px; background: #0f0f0f; color: #fff; border: none;  cursor: pointer;">
        Coupons
    </button>
    <button type="button" id="applyCoupon" style="padding: 10px 20px; background: #070707; color: #fff; border: none;  cursor: pointer; margin-left: 10px;">
        Apply
    </button>
</div>

<!-- Modal for Coupons -->
<div id="couponModal" style="
    display: none; 
    position: fixed; 
    top: 50%; 
    left: 50%; 
    transform: translate(-50%, -50%); 
    z-index: 1000; 
    background: #fff; 
    padding: 20px; 
    border-radius: 10px; 
    width: 400px; 
    box-shadow: 0 4px 8px rgba(0,0,0,0.3);">
    <h4 style="margin-bottom: 20px; color: #333; text-align: center;">Select a Coupon</h4>
    <div id="couponList" style="margin-bottom: 20px; max-height: 200px; overflow-y: auto;">
        <!-- Coupons will be dynamically added here -->
    </div>
    <div style="text-align: center;">
        <button id="closeCouponModal" style="padding: 10px 20px; background: #080808; color: #fff; border: none; cursor: pointer;">
            Close
        </button>
    </div>
</div>

<!-- Overlay for Modal -->
<div id="modalOverlay" style="
    display: none; 
    position: fixed; 
    top: 0; 
    left: 0; 
    width: 100%; 
    height: 100%; 
    background: rgba(0, 0, 0, 0.5); 
    z-index: 999;">
</div>


        
        <div class="checkout__input__checkbox">
            <label for="payment">
                Cash on delivery
                <input type="checkbox" id="payment">
                <span class="checkmark"></span>
            </label>
        </div>
        <div class="checkout__input__checkbox">
            <label for="paypal">
                Razorpay
                <input type="checkbox" id="paypal">
                <span class="checkmark"></span>
            </label>
        </div>
        <div class="checkout__input__checkbox">
            <label for="wallet">
                Wallet
                <input type="checkbox" id="wallet">
                <span class="checkmark"></span>
            </label>
        </div>
        
        <button id="proceedToPay" class="site-btn">Place Order</button>
    </div>
</div>



        </div>
    </div>
</section>
<br><br>
<br><br>
<!-- Checkout Section End -->
<script>
  document.getElementById('proceedToPay').addEventListener('click', function(event) {
    event.preventDefault();
    const couponCode = document.getElementById('couponCode').value.trim();
    const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked').value;
    const paymentMethod = document.querySelector('input[id="payment"]').checked ? 'Cash on Delivery' : 
                          document.querySelector('input[id="wallet"]').checked ? 'Wallet' : 
                          document.querySelector('input[id="paypal"]').checked ? 'Razorpay' : null;

    const cartTotal = parseFloat(document.querySelector('.checkout__total__all li:last-child span').textContent.replace('$', '').trim());                    
    if (!selectedAddress || !paymentMethod) {
        Swal.fire({
            title: 'Error',
            text: 'Please select an address and a payment method to proceed.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
        return;
    }
    if (paymentMethod === 'Razorpay') {
    fetch('/createOrder', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            selectedAddressId: selectedAddress,
            amount: cartTotal
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            const options = {
                key: data.key_id,
                amount: data.amount,
                currency: "INR",
                name: "Your Store Name",
                description: "Purchase Description",
                order_id: data.order_id, 
                handler: function(response) {
                    // After successful payment verification
                    fetch('/verifyPayment', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(response)
                    })
                    .then(res => res.json())
                    .then(verification => {
                        if (verification.success) {
                            fetch('/addToOrder', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    selectedAddressId: selectedAddress,
                                    paymentMethod: paymentMethod,
                                    couponApplied: couponCode, 
                                })
                            })
                            .then(orderResponse => orderResponse.json())
                            .then(orderData => {
                                if (orderData.success) {
                                    Swal.fire({
                                        title: 'Order Placed Successfully!',
                                        text: 'Thank you for your purchase. Your order has been placed.',
                                        icon: 'success',
                                        confirmButtonText: 'Go to Orders'
                                    }).then(() => {
                                        window.location.href = "/order";
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'Order Placement Failed',
                                        text: orderData.message || 'There was an issue placing your order. Please try again.',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    });
                                }
                            });
                        } else {
                            Swal.fire({
                                title: 'Payment Verification Failed',
                                text: verification.message || 'Please contact support.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                },
                prefill: {
                    name: "Customer Name",
                    email: "customer@example.com",
                    contact: "9999999999"
                },
                theme: {
                    color: "#3399cc"
                }
            };

            const rzp = new Razorpay(options);

            rzp.on('payment.failed', function(data) {
                console.error('Payment Failed:', data);
                $.ajax({
                    type: 'POST',
                    url: '/paymentFailed',
                    data: {
                        razorpay_payment_id: data.error.metadata.payment_id,
                        selectedAddressId: selectedAddress,
                        paymentMethod: paymentMethod,
                        couponApplied: couponCode,
                    },
                    success: function(response) {
                        console.log('Server response for payment failure:', response);
                    },
                    error: function(error) {
                        console.error('Error sending payment failure data to the server:', error);
                    }
                });

                Swal.fire({
                    title: 'Payment Failed',
                    text: data.error.description || 'Your payment could not be processed. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            });

            rzp.open();
        } else {
            Swal.fire({
                title: 'Error',
                text: data.message || 'Failed to initiate Razorpay order.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            title: 'Error',
            text: 'Unable to create Razorpay order. Please try again later.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    });
}

    
    
    else {
        fetch('/addToOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                selectedAddressId: selectedAddress,
                paymentMethod: paymentMethod,
                couponApplied: couponCode,
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    title: 'Order Placed Successfully!',
                    text: 'Thank you for your purchase. Your order has been placed.',
                    icon: 'success',
                    confirmButtonText: 'Go to Orders'
                }).then(() => {
                    window.location.href = "/order";
                });
            } else {
                Swal.fire({
                    title: 'Order Failed',
                    text: data.message || 'There was an issue placing your order. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Order Failed',
                text: 'An unexpected error occurred. Please try again later.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        });
    }
});

document.getElementById('selectCoupon').addEventListener('click', async () => {
    const couponModal = document.getElementById('couponModal');
    const couponList = document.getElementById('couponList');
    
    couponModal.style.display = 'block';

    try {
        const response = await fetch('/fetchCoupons');
        const data = await response.json();

        if (data.success) {
            // Populate the modal with coupons
            couponList.innerHTML = data.coupons.map(coupon => `
                <label style="display: flex; align-items: center; margin-bottom: 10px; cursor: pointer;">
                    <input type="radio" name="coupon" value="${coupon.couponCode}" id="coupon-${coupon.couponCode}" style="
                        margin-right: 10px; 
                        transform: scale(0.8);
                        width: 14px;
                        height: 14px;
                    ">
                    <strong>${coupon.couponCode}</strong> - ${coupon.description}
                </label>
            `).join('');
        } else {
            couponList.innerHTML = '<p>No coupons available.</p>';
        }
    } catch (error) {
        console.error('Failed to fetch coupons:', error);
        couponList.innerHTML = '<p>Error loading coupons.</p>';
    }
});

document.getElementById('closeCouponModal').addEventListener('click', () => {
    document.getElementById('couponModal').style.display = 'none';
});

document.getElementById('couponList').addEventListener('change', (event) => {
    if (event.target.name === 'coupon') {
        const selectedCoupon = event.target.value;
        document.getElementById('couponCode').value = selectedCoupon;
        document.getElementById('couponModal').style.display = 'none';
    }
});

document.getElementById('applyCoupon').addEventListener('click', async () => {
    const totalPrice = parseFloat(document.getElementById('cartTotal').value || 0);
    const couponCode = document.getElementById('couponCode').value.trim();

    if (!couponCode) {
        Swal.fire('Error', 'Please enter or select a coupon code.', 'error');
        return;
    }

    try {
        const response = await fetch('/applyCoupon', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ couponCode, totalPrice })
        });

        const data = await response.json();

        if (data.success) {
            Swal.fire('Success', `Coupon applied: ${couponCode}`, 'success');

            const totalElement = document.querySelector('.checkout__total__all li:nth-child(4) span'); 
            const couponElement=document.querySelector('.checkout__total__all li:nth-child(3) span');
            
            totalElement.textContent = `$${data.discountedPrice}`;
            couponElement.textContent=`$${data.discount}`;

            document.getElementById('cartTotal').value = data.discountedPrice;

            document.getElementById('applyCoupon').textContent = 'Remove Coupon';
            document.getElementById('applyCoupon').id = 'removeCoupon'; 

            document.getElementById('couponCode').style.display = 'none';
            document.getElementById('selectCoupon').style.display = 'none';

            document.getElementById('removeCoupon').addEventListener('click', async () => {
                try {
                    const removeResponse = await fetch('/removeCoupon', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ couponCode, totalPrice })
                    });

                    const removeData = await removeResponse.json();

                    if (removeData.success) {
                        Swal.fire('Success', 'Coupon removed successfully.', 'success');

                        location.reload(); 
                    } else {
                        Swal.fire('Error', removeData.message || 'Failed to remove the coupon.', 'error');
                    }
                } catch (error) {
                    console.error('Error removing coupon:', error);
                    Swal.fire('Error', 'Failed to remove the coupon.', 'error');
                }
            });
        } else {
            Swal.fire('Error', data.message || 'Invalid coupon.', 'error');
        }
    } catch (error) {
        console.error('Error applying coupon:', error);
        Swal.fire('Error', 'Failed to apply the coupon.', 'error');
    }
});



</script>



<%- include("../../views/partials/user/footer") %>
