<%- include("../../views/partials/user/header") %>

<div class="container">
    <h1>Your Orders</h1>

    <% if (orders && orders.length > 0) { %>
      <% orders.forEach(order => { %>
        <div class="order-card">
          <div class="order-header">
            <!-- Display full Order ID with reduced font size -->
            <h4>ORDER ID: <span class="order-id"><%= order.orderId %></span></h4>
            <p>Order Date: <%= new Date(order.invoiceDate).toLocaleDateString() %></p>
            <p>Total Price: $<%= order.totalPrice.toFixed(2) %></p>
            <p>Discount Applied: <%= order.discount %>%</p>
            <p>Final Amount: $<%= order.finalAmount.toFixed(2) %></p>

            <!-- Overall order status -->
            <p class="overall-status">
              Overall Status: 
              <% let statuses = order.Ordereditems.map(item => item.status); %>
              <% let priority = { 'Pending': 1, 'Placed': 2, 'Processing': 3, 'Shipped': 4, 'Out for Delivery': 5, 'Delivered': 6, 'Cancelled': 0 }; %>
              <% let maxStatus = statuses.reduce((max, status) => priority[status] > priority[max] ? status : max, statuses[0]); %>
              <span class="status-<%= maxStatus.toLowerCase().replace(/\s+/g, '-') %>"><%= maxStatus %></span>
            </p>
          </div>

          <div class="ordered-items">
            <% order.Ordereditems.forEach(item => { %>
              <div class="item-card">
                <!-- Display product image and name -->
                <div class="product-info">
                  <% if (item.images && item.images && item.images.length > 0) { %>
                    <img src="/uploads/product-images/<%= item.images[0] %>" alt="<%= item.name %>" class="product-image">
                  <% } else { %>
                    <img src="/images/default-product.jpg" alt="Default Image" class="product-image">
                  <% } %>
                  <h3><%= item.name || 'Product Name Unavailable' %></h3>
                </div>
                
                <p>Quantity: <%= item.quantity %></p>
                <p>Price per Unit: $<%= item.price.toFixed(2) %></p>
                <p>Total Price: $<%= item.totalPrice.toFixed(2) %></p>
                <p>Discount Price: $<%= item.discountPrice.toFixed(2) %></p>
                
                <!-- Individual product status -->
                <p class="product-status">
                  Status: 
                  <span class="status-<%= item.status.toLowerCase().replace(/\s+/g, '-') %>"><%= item.status %></span>
                </p>

                <p>
                  <% if (['Pending', 'Processing', 'Placed', 'Shipped', 'Out for Delivery'].includes(item.status)) { %>
                    <button class="cancel-button" onclick="cancelOrder('<%= order._id %>', '<%= item.product._id %>')">
                      Cancel
                  </button>
                  <% } else if(['Delivered'].includes(item.status)){ %>
                    <button class="return-button" onclick="returnOrder('<%= order._id %>', '<%= item.product._id %>')">Return</button>
                 
                  <% } %>
                  
                </p>
              </div>
            <% }) %>
          </div>
        </div>
        <hr>
      <% }) %>
    <% } else { %>
      <p>You have no orders.</p>
    <% } %>
</div>

<%- include("../../views/partials/user/footer") %>

<script>
function cancelOrder(orderId, productId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "This will cancel the order.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, cancel it!',
        cancelButtonText: 'No, keep it'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: '/orders/cancel',
                method: 'POST',
                data: { orderId: orderId, productId: productId },
                success: (response) => {
                    if (response.success) {
                        Swal.fire('Cancelled', response.message, 'success');
                        location.reload(); 
                    } else {
                        Swal.fire('Error', response.message, 'error');
                    }
                },
                error: (jqXHR) => {
                    const message = jqXHR.responseJSON?.message || 'Failed to cancel the order';
                    Swal.fire('Error', message, 'error');
                }
            });
        }
    });
}

function returnOrder(orderId, productId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "This will Return the order.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, Return it!',
        cancelButtonText: 'No, keep it'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: '/orders/return',
                method: 'POST',
                data: { orderId: orderId, productId: productId },
                success: (response) => {
                    if (response.success) {
                        Swal.fire('Returned', response.message, 'success');
                        location.reload(); 
                    } else {
                        Swal.fire('Error', response.message, 'error');
                    }
                },
                error: (jqXHR) => {
                    const message = jqXHR.responseJSON?.message || 'Failed to return the order';
                    Swal.fire('Error', message, 'error');
                }
            });
        }
    });
}
</script>

<style>
  .order-card {
    border: 1px solid #ccc;
    padding: 20px;
   
    margin-bottom: 20px;
    background-color: #f9f9f9;
  }

  .order-header {
    margin-bottom: 10px;
  }

  .order-id {
    font-size: 0.85em;
    color: #555;
  }
  .cancel-button {
    background-color: #111111; 
    color: white; 
    border: none;
    padding: 2px 10px;
    
    font-size: 14px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
}
.return-button {
    background-color: #111111; 
    color: white; 
    border: none;
    padding: 2px 10px;
    
    font-size: 14px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
}


  .ordered-items {
    display: flex;
    flex-wrap: wrap;
  }

  .item-card {
    border: 1px solid #ddd;
    padding: 10px;
    margin: 10px;

    background-color: #fff;
    flex: 1 1 calc(50% - 20px);
    max-width: 300px;
  }

  .product-info {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 10px;
  }

  .product-image {
    width: 50px;
    height: 50px;
    object-fit: cover;
    border-radius: 4px;
  }

  .item-card h3 {
    margin: 0;
    font-size: 1.1em;
  }

  .product-status span,
  .overall-status span {
    font-weight: bold;
    padding: 3px 6px;
   
  }

  .status-pending {
    background-color: #e6ccb7;
    color: #fff;
  }

  .status-processing {
    background-color: #b0f1ea;
    color: #fff;
  }

  .status-shipped {
    background-color: #8fd7f3;
    color: #fff;
  }
  .status-returned {
    background-color: #9c567f;
    color: #fff;
  }
  .status-delivered {
    background-color: #6dbd8b;
    color: #fff;
  }

  .status-placed {
    background-color: #b9dcfc; 
    color: #fff;
  }

  .status-out-for-delivery {
    background-color: #535a63;
    color: #fff;
  }

  .status-cancelled {
    background-color: #8a1007;
    color: #fff;
  }

  .status-default {
    background-color: #808080;
    color: #fff;
  }
</style>
